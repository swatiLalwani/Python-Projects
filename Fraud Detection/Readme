Tools and techniques used
Programming Language: Python
Data Handling: Utilized Pandas and NumPy for data manipulation and analysis.
Visualization: Employed Matplotlib and Seaborn for effective data visualization.
Machine Learning Models:
Isolation Forest
Local Outlier Factor (LOF)
One-Class SVM

Project Overview:
This project focuses on detecting fraudulent transactions within a credit card dataset comprising transactions made by European cardholders in September 2013. The dataset includes a total of 284,807 transactions, out of which only 492 are classified as fraudulent.

Features: Key features include transaction details such as the transaction amount and a class label indicating whether a transaction is fraudulent (0 for normal transactions and 1 for fraudulent transactions).

Analysis & Key Insights:
Exploratory Data Analysis (EDA):

The dataset was found to be highly imbalanced, with only 492 instances of fraud.
Analysis revealed notable differences in transaction amounts between fraudulent and normal transactions.
Modeling:

Three machine learning models were implemented to detect fraud:
Isolation Forest: Detected 199 errors with an impressive accuracy of 99.76%.
Local Outlier Factor (LOF): Detected 263 errors, achieving an accuracy of 99.69%.
One-Class SVM: Detected 8,516 errors but had a much lower accuracy of 70.09%.

Conclusion and Recommendations:
Isolation Forest detected 199 errors, compared to 263 errors detected by the Local Outlier Factor (LOF) and 8,516 errors detected by the SVM model. Isolation Forest demonstrated an accuracy of 99.76%, outperforming LOF at 99.69% and SVM at 70.09%.
When evaluating error precision and recall across the three models, Isolation Forest showed significantly better performance than LOF, with a fraud detection rate of approximately 27%, compared to just 3% for LOF and 0% for SVM. Overall, Isolation Forest proved to be much more effective, achieving around 30% fraud detection accuracy.
This accuracy could be further improved by increasing the sample size or employing deep learning algorithms, though this would come with higher computational costs. Additionally, more complex anomaly detection models could be explored to enhance fraud detection accuracy.
